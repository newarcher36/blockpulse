name: Build and Deploy React to S3 + CloudFront

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }} # e.g. my-blockpulse-web-bucket
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  test:
    name: Run frontend tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (lockfile)
        run: npm ci

      - name: Run tests (CI mode)
        env:
          CI: true
        run: npm test -- --watchAll=false

  build-and-deploy:
    name: Build and deploy to S3 + invalidate CloudFront
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (lockfile)
        run: npm ci

      - name: Build React app
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload HTML & root assets with no-store (fast rollouts)
        run: |
          aws s3 sync build/ s3://blockpulse-ui/ \
            --delete \
            --exclude "static/*" \
            --cache-control "no-store, max-age=0"

      - name: Upload fingerprinted static assets with long cache
        run: |
          aws s3 sync build/static s3://blockpulse-ui/static \
            --delete \
            --cache-control "public, max-age=31536000, immutable"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
            --paths "/*"

